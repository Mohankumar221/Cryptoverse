{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst cryptoApiHeaders = {\n  'X-RapidAPI-Key': 'ae147206cemsha032628a10e9536p1746fcjsn8abbadd3c0a1',\n  'X-RapidAPI-Host': 'coinranking1.p.rapidapi.com'\n};\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\nconst createRequest = url => ({\n  url,\n  headers: cryptoApiHeaders\n});\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl\n  }),\n  endpoints: builder => ({\n    getCryptos: builder.query({\n      query: count => createRequest('/coins')\n    }),\n    getCryptoDetails: builder.query({\n      query: coinId => createRequest(`/coin/${coinId}`)\n    }),\n    getCryptoHistory: builder.query({\n      query: ({\n        coinId,\n        timeperiod\n      }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`)\n    })\n  })\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery\n} = cryptoApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptoApiHeaders","baseUrl","createRequest","url","headers","cryptoApi","reducerPath","baseQuery","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery"],"sources":["C:/Users/Madhan Mohan/Desktop/cryptoapp/src/services/cryptoApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n    'X-RapidAPI-Key': 'ae147206cemsha032628a10e9536p1746fcjsn8abbadd3c0a1',\r\n    'X-RapidAPI-Host': 'coinranking1.p.rapidapi.com'\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest('/coins')\r\n    }),\r\n\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\r\n    }),\r\n\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetExchangesQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,gBAAgB,GAAG;EACrB,gBAAgB,EAAE,oDAAoD;EACtE,iBAAiB,EAAE;AACvB,CAAC;AAED,MAAMC,OAAO,GAAG,qCAAqC;AAErD,MAAMC,aAAa,GAAIC,GAAG,KAAM;EAAEA,GAAG;EAAEC,OAAO,EAAEJ;AAAiB,CAAC,CAAC;AAEnE,OAAO,MAAMK,SAAS,GAAGP,SAAS,CAAC;EACjCQ,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAER,cAAc,CAAC;IAAEE;EAAQ,CAAC,CAAC;EACtCO,SAAS,EAAGC,OAAO,KAAM;IACvBC,UAAU,EAAED,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAGC,KAAK,IAAKV,aAAa,CAAC,QAAQ;IAC1C,CAAC,CAAC;IAEFW,gBAAgB,EAAEJ,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAGG,MAAM,IAAKZ,aAAa,CAAC,SAASY,MAAM,EAAE;IACpD,CAAC,CAAC;IAEFC,gBAAgB,EAAEN,OAAO,CAACE,KAAK,CAAC;MAC9BA,KAAK,EAAEA,CAAC;QAAEG,MAAM;QAAEE;MAAW,CAAC,KAAKd,aAAa,CAAC,QAAQY,MAAM,uBAAuBE,UAAU,EAAE;IACpG,CAAC;EAEH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXC,kBAAkB;EAClBC,wBAAwB;EACxBC,oBAAoB;EACpBC;AACF,CAAC,GAAGf,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}