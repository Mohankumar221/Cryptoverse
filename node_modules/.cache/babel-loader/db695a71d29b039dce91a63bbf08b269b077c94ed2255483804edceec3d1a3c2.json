{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhan Mohan\\\\Desktop\\\\cryptoapp\\\\src\\\\components\\\\CryptoDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography, Select } from 'antd';\nimport LineChart from './LineChart'; // Assuming you have a LineChart component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst CryptoDetailsPage = () => {\n  _s();\n  const {\n    coinId\n  } = useParams();\n  const [timePeriod, setTimePeriod] = useState('7d'); // Initial time period\n\n  // Mock data structure based on the provided format\n  const cryptoDetailsData = {\n    status: 'success',\n    data: {\n      change: '0.10',\n      history: [{\n        price: '...',\n        timestamp: '...'\n      }\n      // Add more historical data points here as needed\n      ]\n    }\n  };\n\n  // Handle time period change\n  const handleTimePeriodChange = value => {\n    setTimePeriod(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [cryptoDetailsData.data.name, \" (\", cryptoDetailsData.data.symbol, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: timePeriod,\n      onChange: handleTimePeriodChange,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"1d\",\n        children: \"1 Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"7d\",\n        children: \"1 Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"1m\",\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      coinHistory: cryptoDetailsData.data.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoDetailsPage, \"brmcVM+36lwHOtVO19xL35D1ThA=\", false, function () {\n  return [useParams];\n});\n_c = CryptoDetailsPage;\nexport default CryptoDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"CryptoDetailsPage\");","map":{"version":3,"names":["React","useState","useParams","Typography","Select","LineChart","jsxDEV","_jsxDEV","Title","Option","CryptoDetailsPage","_s","coinId","timePeriod","setTimePeriod","cryptoDetailsData","status","data","change","history","price","timestamp","handleTimePeriodChange","value","children","name","symbol","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","coinHistory","_c","$RefreshReg$"],"sources":["C:/Users/Madhan Mohan/Desktop/cryptoapp/src/components/CryptoDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Typography, Select } from 'antd';\r\nimport LineChart from './LineChart'; // Assuming you have a LineChart component\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetailsPage = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState('7d'); // Initial time period\r\n\r\n  // Mock data structure based on the provided format\r\n  const cryptoDetailsData = {\r\n    status: 'success',\r\n    data: {\r\n      change: '0.10',\r\n      history: [\r\n        { price: '...', timestamp: '...' }, \r\n        // Add more historical data points here as needed\r\n      ]\r\n    }\r\n  };\r\n\r\n  // Handle time period change\r\n  const handleTimePeriodChange = (value) => {\r\n    setTimePeriod(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>{cryptoDetailsData.data.name} ({cryptoDetailsData.data.symbol})</Title>\r\n      <Select defaultValue={timePeriod} onChange={handleTimePeriodChange}>\r\n        <Option value=\"1d\">1 Day</Option>\r\n        <Option value=\"7d\">1 Week</Option>\r\n        <Option value=\"1m\">1 Month</Option>\r\n        {/* Add more options as needed */}\r\n      </Select>\r\n      <LineChart coinHistory={cryptoDetailsData.data.history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoDetailsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,MAAM,QAAQ,MAAM;AACzC,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAM;EAAEC;AAAM,CAAC,GAAGL,UAAU;AAC5B,MAAM;EAAEM;AAAO,CAAC,GAAGL,MAAM;AAEzB,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMc,iBAAiB,GAAG;IACxBC,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE;MACJC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAM;MACjC;MAAA;IAEJ;EACF,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;IACxCT,aAAa,CAACS,KAAK,CAAC;EACtB,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACC,KAAK;MAAAgB,QAAA,GAAET,iBAAiB,CAACE,IAAI,CAACQ,IAAI,EAAC,IAAE,EAACV,iBAAiB,CAACE,IAAI,CAACS,MAAM,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9EvB,OAAA,CAACH,MAAM;MAAC2B,YAAY,EAAElB,UAAW;MAACmB,QAAQ,EAAEV,sBAAuB;MAAAE,QAAA,gBACjEjB,OAAA,CAACE,MAAM;QAACc,KAAK,EAAC,IAAI;QAAAC,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjCvB,OAAA,CAACE,MAAM;QAACc,KAAK,EAAC,IAAI;QAAAC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCvB,OAAA,CAACE,MAAM;QAACc,KAAK,EAAC,IAAI;QAAAC,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC,eACTvB,OAAA,CAACF,SAAS;MAAC4B,WAAW,EAAElB,iBAAiB,CAACE,IAAI,CAACE;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCID,iBAAiB;EAAA,QACFR,SAAS;AAAA;AAAAgC,EAAA,GADxBxB,iBAAiB;AAmCvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}